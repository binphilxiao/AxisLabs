Setup Bus Pirate
	m
	4
	1	//BQ27426 can only work on 5kHz SCL, others can work on 400kHz
	W
	P

PCA6408 I/O Expander
	[0x40 0x03 0x30]	//Config Bit0~3, Bit6~7 output, Bit4~5 input Bit
	[0x40 0x03 0xff]	//Config Bit0~7 input Bit, for saving quscient power
	[0x40 0x01 0x00]	//Set Bit0~4 0, Boost_sw 0, Boost_en 0
	[0x40 0x01 0x0f]	//Set Bit0~4 1, Boost_sw 0, Boost_en 0
	[0x40 0x01 0xcf]	//Boost converter enabled, V_motor is set to 9V, Set Bit0~4 1, Boost_sw 1, Boost_en 1
	[0x40 0x01 0xc0]	//Boost converter enabled, V_motor is set to 12, Set Bit0~4 0, Boost_sw 1, Boost_en 1
	[0x40 0x00 [0x41 r] 

BQ24296	USB Charger	
	[0xD6 0x01 0x80]	//Reset configuration.
	[0xD6 0x01 0x5b]	//Reset Host mode watch dog. Default mode(non host mode) will stop charging after 12 hours
	Input control
		[0xD6 0x00 0x00]	//Disable
		[0xD6 0x00 0xa0]	//Enable, 4.2V(input voltage limit), 100mA(input current limit)
		[0xD6 0x00 0xa6]	//Enable, 4.2V(input voltage limit), 2A(input current limit)
	Fast charging current control
		[0xD6 0x02 0x40]	//Charging current <= 1536mA 
	Pre charging current control
	End charging current control
		[0xD6 0x03 0x11]	//default, Pre-charging I<=128mA, End -charging I<=256mA
	Charge voltage and Pre-Fast charge threshold
		[0xD6 0x04 0xb2]	//default, Charging Voltage = 4.208V, Hysteresis +4% -2%
					//Pre-to-Fast Voltage = 3.0V, Fast-to-Pre charge Voltage = 2.8V (not configurable)
	Set Timer
		[0xD6 0x05 0x9c]	//default, 40s watch dog timer, 12 hours fast charge.
	Read Status
		[0xD6 0x08 [0xD7 r]
	Read Faulty
		[0xD6 0x09 [0xD7 r]
	Read ID
		[0xD6 0x0a [0xD7 r]
	Sample1:
		[0xD6 0x00 0xa6]	//Enable, 4.2V(input voltage limit), 2A(input current limit)
		[0xD6 0x02 0x40]	//Charging current <= 1536mA 
		[0xD6 0x01 0x5b]	//Reset Host mode watch dog. Default mode(non host mode) will stop charging after 12 hours
		while(1){
			delay(30);		//delay 30s
			[0xD6 0x01 0x5b]	//Reset Host mode watch dog. Default mode(non host mode) will stop charging after 12 hours
		}
	Sample2:
		[0xD6 0x00 0xa6]	//Enable, 4.2V(input voltage limit), 2A(input current limit)
		[0xD6 0x02 0x40]	//Charging current <= 1536mA 

BQ27426	Fuel Gauge
	Shutdown
		[0xaa 0x00 0x1b 0x00][0xaa 0x00 0x1c 0x00]
	Wake up		
		[0x40 0x03 0x10][0x40 0x01 0x0f][0x40 0x01 0x2f]	//Config Bit0~3, Bit5~7 output, Bit4 input Bit //Set Bit0~4 1, Boost_sw 0, Boost_en 0, GPOUT 0, //Set Bit0~4 1, Boost_sw 0, Boost_en 0, GPOUT 1,
		delay 200us
		[0x40 0x01 0x0f][0x40 0x03 0x30]	//Set Bit0~4 1, Boost_sw 0, Boost_en 0, GPOUT 0, //Config Bit0~3, Bit6~7 output, Bit4~5 input Bit

	Data Memory Parameter Update Example
		[0xaa 0x00 0x00][0xaa 0x01 0x80][0xaa 0x00 0x00][0xaa 0x01 0x80]	//Unseal
		[0xaa 0x00 0x00 0x80][0xaa 0x00 0x00 0x80]				//Unseal
		[0xaa 0x00 0x13 0x00]							//Send SET_CFGUPDATE subcommand, Control(0x0013)
		[0xaa 0x00 0x06 0x00][0xaa 0x06 [0xab rr]				//Confirm CFGUPDATE mode by polling Flags() register until bit 4 is set. //The host should wait for 1 second to ensure IT processing has been stopped. 
		[0xaa 0x61 0x00]							//Enable block data memory control
		[0xaa 0x3e 0x52]							//Access the State subclass
		[0xaa 0x3f 0x00]							//Write the block offset location
		[0xaa 0x60 [0xab r]							//Read the 1-byte checksum
		[0xaa 0x4A [0xab r][0xaa 0x4B [0xab r]					//Read both Design Capacity bytes (3200mAh)
		[0xaa 0x4A 0x0C][0xaa 0x4B 0x80]					//Write both Design Capacity bytes (3200mAh)
		[0xaa 0x60 0x53]							//Write check sum
		[0xaa 0x00 0x42 0x00]							//Exit CFGUPDATE mode by sending the SOFT_RESET subcommand.
		[0xaa 0x00 0x06 0x00][0xaa 0x06 [0xab rr]				//Confirm CFGUPDATE has been exited by polling Flags() register until bit 4 is cleared.  //(This may take up to 1 second.) SOC will be valid after 2 seconds
		[0xaa 0x00 0x20 0x00]							//If the device was previously SEALED, return to SEALED mode by sending the Control(0x0020) subcommand.

	Chemistry Profile Change Example
		[0xaa 0x00 0x00][0xaa 0x01 0x80][0xaa 0x00 0x00][0xaa 0x01 0x80]	//Unseal Option1
		[0xaa 0x00 0x00 0x80][0xaa 0x00 0x00 0x80]				//Unseal Option2
		[0xaa 0x00 0x08 0x00][0xaa 0x00 [0xab rr]				//Read CHEMICAL ID
		[0xaa 0x00 0x13 0x00]							//Send SET_CFGUPDATE subcommand, Control(0x0013)
		[0xaa 0x00 0x06 0x00][0xaa 0x06 [0xab rr]				//Confirm CFGUPDATE mode by polling Flags() register until bit 4 is set. //The host should wait for 1 second to ensure IT processing has been stopped. 
		[0xaa 0x00 0x31 0x00]							//Change Chemistry to CHEM_C (chem ID = 1202, 4.2 V).									
		[0xaa 0x00 0x42 0x00]							//Exit CFGUPDATE mode by sending the SOFT_RESET subcommand.
		[0xaa 0x00 0x06 0x00][0xaa 0x06 [0xab rr]				//Confirm CFGUPDATE has been exited by polling Flags() register until bit 4 is cleared. //(This may take up to 1 second.) SOC will be valid after 2 seconds			
		[0xaa 0x00 0x08 0x00][0xaa 0x00 [0xab rr]				//Read CHEMICAL ID
		[0xaa 0x00 0x20 0x00]							//If the device was previously SEALED, return to SEALED mode by sending the Control(0x0020) subcommand.

	[0xaa 0x00 0x41 0x00]				//FULL_RESET subcommand.
	[0xaa 0x00 0x01 0x00][0xaa 0x00 [0xab rr]	//Read DEVICE_TYPE(0x0426)
	[0xaa 0x00 0x02 0x00][0xaa 0x00 [0xab rr]	//Read Firmware Version
	[0xaa 0x04 [0xab rr]				//Read Voltage(0-6000mV)
	[0xaa 0x02 [0xab rr]				//Read Temperature(0.1°K)
	[0xaa 0x08 [0xab rr]				//Read NominalAvailableCapacity(mAh)
							//Uncompensated (less than C/20 load)
	[0xaa 0x0a [0xab rr]	//Read FullCapacity(mAh)
				//Uncompensated (less than C/20 load)
	[0xaa 0x0c [0xab rr]	//Read RemainingCapacity(mAh)
	[0xaa 0x0e [0xab rr]	//Read FullChargeCapacity(mAh)
	[0xaa 0x10 [0xab rr]	//Read AverageCurrent(mAh)
	[0xaa 0x18 [0xab rr]	//Read AveragePower(mW)
	[0xaa 0x1c [0xab rr]	//Read StateOfCharge
	[0xaa 0x1e [0xab rr]	//Read InternalTemperature(0.1°K)
	[0xaa 0x20 [0xab rr]	//Read StateOfHealth
	[0xaa 0x28 [0xab rr]	//Read RemainingCapacityUnfiltered(mAh)
	[0xaa 0x2a [0xab rr]	//Read RemainingCapacityFiltered(mAh)
	[0xaa 0x2c [0xab rr]	//Read FullChargeCapacityUnfiltered(mAh)
	[0xaa 0x2e [0xab rr]	//Read FullChargeCapacityFiltered(mAh)
	[0xaa 0x30 [0xab rr]	//Read StateOfChargeUnfiltered

	

	









